{"version":3,"sources":["components/styles/Global.ts","components/styles/Button.styled.ts","components/styles/Wrapper.styled.ts","components/styles/Image.styled.ts","components/styles/StyledProductCard.ts","components/styles/ProductCardText.styled.ts","components/ProductCard/ProductCard.tsx","components/styles/StyledSearchBar.ts","components/styles/Input.styled.ts","components/SearchBar/SearchBar.tsx","components/styles/Container.styled.ts","components/styles/ProductList.styled.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["GlobalStyles","createGlobalStyle","StyledButton","styled","button","ButtonAddToCart","Wrapper","div","ButtonWrapper","CardImage","img","LoadingImage","StyledProductCard","CardTitle","span","fontWeight","fontSize","CardRating","CardCount","CardPrice","color","CardSale","ProductCard","state","props","product","this","title","image","rating","price","alt","src","rate","count","Math","floor","React","Component","StyledSearchBar","Input","input","attrs","type","placeholder","axios","defaults","baseURL","SearchBar","updateInputValue","loading","activeButton","useState","inputValue","setInputValue","buttonTitles","setButtonTitles","useEffect","get","then","data","finally","timeOut","setTimeout","newtimeOut","clearTimeout","sort","map","onClick","charAt","toUpperCase","slice","value","onChange","e","target","trimLeft","Container","ProductList","App","setLoading","products","setProducts","filteredList","setFilteredList","setActiveButton","filtered","filter","toLowerCase","includes","updateFilteredList","Global","category","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8383d2b3.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyles = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;500;600;700&display=swap');\n\nbody{\n  font-family: 'Montserrat', sans-serif;\n}\n\n`;\n\nexport default GlobalStyles;\n","import styled from 'styled-components';\n\nexport const StyledButton = styled.button`\n  padding: 10px 15px;\n  cursor: pointer;\n  font-weight: 500;\n  background-color: #e9b15e;\n  border-radius: 4px;\n  color: #ffffff;\n  border: 2px solid transparent;\n  font-weight: 600;\n  font-size: 14px;\n  transition: all ease 0.3s;\n  &:hover,\n  &:focus {\n    background-color: #2e2c2c;\n    color: #e9b15e;\n    border: 2px solid transparent;\n  }\n`;\n\nexport const ButtonAddToCart = styled(StyledButton)`\n  width: 100%;\n  max-width: 180px;\n  margin: 0 auto;\n`;\n\nexport default StyledButton;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  margin: 0 auto;\n  width: 280px;\n  height: 350px;\n  padding: 10px 20px 20px 20px;\n  opacity: 0.95;\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  margin-bottom: 20px;\n`;\n\nexport default Wrapper;\n","import styled from 'styled-components';\n\nexport const CardImage = styled.img`\n  object-fit: contain;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const LoadingImage = styled(CardImage)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 50px;\n  height: 50px;\n`;\n\nexport default CardImage;\n","import styled from 'styled-components';\n\nconst StyledProductCard = styled.div`\n  width: 100%;  \n  border-radius: 8px;\n  display: grid;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  border: 2px solid #c5c1c1;\n  padding: 30px 10px;\n  text-align: center;\n  cursor: pointer;\n  transition: all ease 0.3s;\n  position: relative;\n  &:hover {\n    box-shadow: 0 1px 10px #363635;\n    border: 2px solid transparent;\n  }\n`;\n\nexport default StyledProductCard;\n","import styled from 'styled-components';\n\ntype Props = {\n  fontWeight: string;\n  fontSize: string;\n  color: string;\n};\n\nexport const CardTitle = styled.span<Props>`\nfont-weight:  ${({ fontWeight }) => fontWeight || '400'};\nfont-size: ${({ fontSize }) => fontSize || '14px'}\n  max-height: 250px;\n  height: 100%; \n  display: flex;\n  justify-content: center;\n  align-items: center;\n  line-height: 1.2;\n  padding: 0 20px;\n`;\n\nexport const CardRating = styled.span`\n  font-weight: 600;\n`;\n\nexport const CardCount = styled(CardRating)``;\n\nexport const CardPrice = styled.span<Props>`\n  color: ${({ color }) => color || 'black'};\n  font-size: ${({ fontSize }) => fontSize || '14px'};\n  font-weight: ${({ fontWeight }) => fontWeight || '400'};\n  margin-bottom: 20px;\n  display:inline-flex;\n  justify-content:center;\n  align-items:center;\n`;\n\nexport const CardSale = styled(CardPrice)`\n  margin-bottom: 0;\n  text-decoration: line-through;\n`;\n\nexport default CardTitle;\n","import React from 'react';\nimport { Product } from '../../App';\nimport { ButtonAddToCart } from '../styles/Button.styled';\nimport Wrapper from '../styles/Wrapper.styled';\nimport { CardImage } from '../styles/Image.styled';\nimport StyledProductCard from '../styles/StyledProductCard';\nimport {\n  CardTitle,\n  CardCount,\n  CardPrice,\n  CardRating,\n  CardSale,\n} from '../styles/ProductCardText.styled';\n\ntype Card = {\n  product: Product;\n};\n\nclass ProductCard extends React.Component<Card> {\n  state = this.props.product;\n\n  render() {\n    const {\n      title, image, rating, price,\n    } = this.state;\n\n    return (\n      <StyledProductCard>\n        <Wrapper>\n          <CardImage alt={title} src={image} />\n        </Wrapper>\n\n        <CardTitle fontSize=\"16px\" fontWeight=\"700\" color=\"black\">\n          {title}\n        </CardTitle>\n        <CardRating>{` Rating: ${rating.rate}`}</CardRating>\n        <CardCount>{`In stock: ${rating.count} `}</CardCount>\n\n        <CardPrice color=\"#e9b15e\" fontSize=\"24px\" fontWeight=\"700\">\n          {`${price}€`}\n          &nbsp;\n          <CardSale color=\"#b3b0b0\" fontSize=\"16px\" fontWeight=\"600\">\n            {`${Math.floor(+price + 50)} €`}\n          </CardSale>\n        </CardPrice>\n        <ButtonAddToCart>Add to cart</ButtonAddToCart>\n      </StyledProductCard>\n    );\n  }\n}\n\nexport default ProductCard;\n","import styled from 'styled-components';\n\nexport const StyledSearchBar = styled.div`\n  display: grid;\n  justify-content: center;\n  align-items: center;\n  margin: 0 auto;\n  max-width: 650px;\n  width: 100%;\n`;\n\nexport default StyledSearchBar;\n","import styled from 'styled-components';\n\nconst Input = styled.input.attrs({ type: 'text', placeholder: 'Search...' })`\n  padding: 8px 15px;\n  margin: 0 auto;\n  max-width: 380px;\n  width: 100%;\n  height: 36px;\n  display: flex;\n  font-weight: 500;\n  font-size: 14px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 4px;\n  margin-bottom: 25px;\n  outline: none;\n  border: 2px solid #c5c1c1;\n  &:focus {\n    border: 3px solid #e9b15e;\n  }\n`;\n\nexport default Input;\n","import React, { useEffect, useState } from 'react';\nimport axios, { AxiosResponse } from 'axios';\nimport StyledSearchBar from '../styles/StyledSearchBar';\nimport { ButtonWrapper } from '../styles/Wrapper.styled';\nimport StyledButton from '../styles/Button.styled';\nimport Input from '../styles/Input.styled';\n\naxios.defaults.baseURL = 'https://fakestoreapi.com';\n\ntype Props = {\n  updateInputValue: (value: string) => void;\n  loading: (arg: boolean) => void;\n  activeButton: (title: string) => void;\n};\n\nconst SearchBar = ({ updateInputValue, loading, activeButton }: Props) => {\n  const [inputValue, setInputValue] = useState('');\n  const [buttonTitles, setButtonTitles] = useState<string[]>([]);\n\n  useEffect(() => {\n    loading(true);\n    axios\n      .get('/products/categories')\n      .then(({ data }: AxiosResponse<string[]>) => {\n        setButtonTitles([...data, 'all']);\n      })\n      .finally(() => loading(false));\n  }, []);\n\n  useEffect(() => {\n    const timeOut = setTimeout(() => {\n      updateInputValue(inputValue);\n      loading(true);\n\n      const newtimeOut = setTimeout(() => {\n        loading(false);\n      }, 300);\n\n      return () => {\n        clearTimeout(newtimeOut);\n      };\n    }, 600);\n\n    return () => {\n      clearTimeout(timeOut);\n    };\n  }, [inputValue]);\n\n  return (\n    <StyledSearchBar>\n      <ButtonWrapper>\n        {buttonTitles.sort().map((title) => (\n          <StyledButton\n            key={title}\n            onClick={() => {\n              activeButton(title);\n              setInputValue('');\n            }}\n          >\n            {title.charAt(0).toUpperCase() + title.slice(1)}\n          </StyledButton>\n        ))}\n      </ButtonWrapper>\n\n      <Input\n        type=\"text\"\n        placeholder=\"Search...\"\n        value={inputValue}\n        onChange={(e) => {\n          setInputValue(e.target.value.trimLeft());\n        }}\n      />\n    </StyledSearchBar>\n  );\n};\n\nexport default SearchBar;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  padding: 40px 10px;\n`;\n\nexport default Container;\n","import styled from 'styled-components';\n\nconst ProductList = styled.div`\n  display: grid;\n  justify-content: center;\n  grid-template-columns: repeat(auto-fit, 320px);\n  gap: 20px;\n  \n  @media only screen and (max-width: 375px){\n    grid-template-columns: repeat(auto-fit, 300px);\n    gap:15px;   \n  }\n`;\n\nexport default ProductList;\n","import { useEffect, useState } from 'react';\nimport axios, { AxiosResponse } from 'axios';\nimport GlobalStyles from './components/styles/Global';\nimport ProductCard from './components/ProductCard/ProductCard';\nimport SearchBar from './components/SearchBar/SearchBar';\nimport Container from './components/styles/Container.styled';\nimport ProductList from './components/styles/ProductList.styled';\nimport { LoadingImage } from './components/styles/Image.styled';\n\naxios.defaults.baseURL = 'https://fakestoreapi.com';\n\nexport type Product = {\n  id: number;\n  title: string;\n  price: number;\n  description: string;\n  category: string;\n  image: string;\n  rating: {\n    rate: number;\n    count: number;\n  };\n};\n\nconst App = () => {\n  const [loading, setLoading] = useState(false);\n  const [products, setProducts] = useState<Product[]>([]);\n  const [filteredList, setFilteredList] = useState<Product[]>([]);\n  const [inputValue, setInputValue] = useState('');\n  const [activeButton, setActiveButton] = useState('all');\n\n  useEffect(() => {\n    setLoading(true);\n    axios\n      .get('/products')\n      .then(({ data }: AxiosResponse<Product[]>) => {\n        setProducts(data);\n        setFilteredList(data);\n      })\n      .finally(() => setLoading(false));\n  }, []);\n\n  const updateFilteredList = () => {\n    const filtered = products.filter((product) => product.title.toLowerCase().includes(inputValue.toLowerCase()));\n    setFilteredList(filtered);\n  };\n\n  useEffect(() => {\n    updateFilteredList();\n  }, [loading]);\n\n  return (\n    <Container>\n      <GlobalStyles />\n      <SearchBar\n        updateInputValue={setInputValue}\n        loading={setLoading}\n        activeButton={setActiveButton}\n      />\n\n      {!loading ? (\n        <ProductList>\n          {filteredList\n            .filter((product) => (activeButton === 'all'\n              ? product\n              : product.category === activeButton))\n            .map((product) => (\n              <ProductCard product={product} key={product.id} />\n            ))}\n        </ProductList>\n      ) : (\n        <LoadingImage src=\"loading.gif\" />\n      )}\n    </Container>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}